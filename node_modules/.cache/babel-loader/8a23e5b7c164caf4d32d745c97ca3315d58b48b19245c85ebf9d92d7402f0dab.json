{"ast":null,"code":"var _jsxFileName = \"D:\\\\Git\\\\react_weather_app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport CitiesButton from './components/CitiesButton';\nimport hot from './assets/hot.jpg';\nimport SearchBar from './components/SearchBar';\n// import UilReact from '@iconscout/react-unicons/icons/uil-react'\nimport TimeandLocation from './components/TimeandLocation';\nimport CurrentDetails from './components/CurrentDetails';\nimport Forcast from './components/Forcast';\nimport { useEffect, useState } from 'react';\nimport getFormattedData from './apiservices/weatherapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [city, setCity] = useState({\n    q: 'Berlin'\n  });\n  const [units, setUnit] = useState('metric');\n  const [weather, setWeather] = useState(null);\n  const startDataFetch = async () => {\n    const data = await getFormattedData({\n      ...city,\n      units\n    }).then(data => {\n      setWeather(data);\n    });\n    console.log(weather);\n  };\n  useEffect(() => {\n    startDataFetch();\n  }, [city, units]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: `url(${hot})`,\n      backgroundSize: 'cover'\n    },\n    className: \"mx-auto max-w-screen-md mt-4 py-6 px-32  h-fit shadow-xl shadow-gray-400\",\n    children: [/*#__PURE__*/_jsxDEV(CitiesButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 1\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TimeandLocation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(CurrentDetails, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Forcast, {\n        title: 'Hourly Forecast'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Forcast, {\n        title: 'Daily Forecast'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LZzKeohYG0wM9moYBc85Ca/mFjI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["CitiesButton","hot","SearchBar","TimeandLocation","CurrentDetails","Forcast","useEffect","useState","getFormattedData","App","city","setCity","q","units","setUnit","weather","setWeather","startDataFetch","data","then","console","log","backgroundImage","backgroundSize"],"sources":["D:/Git/react_weather_app/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport CitiesButton from './components/CitiesButton';\nimport hot from './assets/hot.jpg'\nimport SearchBar from './components/SearchBar';\n// import UilReact from '@iconscout/react-unicons/icons/uil-react'\nimport TimeandLocation from './components/TimeandLocation';\nimport CurrentDetails from './components/CurrentDetails';\nimport Forcast from './components/Forcast';\nimport { useEffect, useState } from 'react';\nimport getFormattedData from './apiservices/weatherapi'\n\nfunction App() {\nconst [city,setCity] = useState({q: 'Berlin'})\nconst [units,setUnit] =useState('metric')\nconst [weather,setWeather]=useState(null)\n\n  const startDataFetch = async()=>{\n    const data = await getFormattedData({...city,units}).then((data)=>{setWeather(data)})\n    console.log(weather)\n  }\n\n  \nuseEffect(()=>{\nstartDataFetch();\n},[city,units])\n\n  return (\n    <div style={{backgroundImage: `url(${hot})`,backgroundSize: 'cover'}} className=\"mx-auto max-w-screen-md mt-4 py-6 px-32  h-fit shadow-xl shadow-gray-400\">\n<CitiesButton/>\n<SearchBar/>\n\n{weather && (\n<div><TimeandLocation/>\n<CurrentDetails/>\n<Forcast title={'Hourly Forecast'}/>\n<Forcast title={'Daily Forecast'}/></div>\n\n)}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,YAAY,MAAM,2BAA2B;AACpD,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C;AACA,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,gBAAgB,MAAM,0BAA0B;AAAA;AAEvD,SAASC,GAAG,GAAG;EAAA;EACf,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGJ,QAAQ,CAAC;IAACK,CAAC,EAAE;EAAQ,CAAC,CAAC;EAC9C,MAAM,CAACC,KAAK,EAACC,OAAO,CAAC,GAAEP,QAAQ,CAAC,QAAQ,CAAC;EACzC,MAAM,CAACQ,OAAO,EAACC,UAAU,CAAC,GAACT,QAAQ,CAAC,IAAI,CAAC;EAEvC,MAAMU,cAAc,GAAG,YAAS;IAC9B,MAAMC,IAAI,GAAG,MAAMV,gBAAgB,CAAC;MAAC,GAAGE,IAAI;MAACG;IAAK,CAAC,CAAC,CAACM,IAAI,CAAED,IAAI,IAAG;MAACF,UAAU,CAACE,IAAI,CAAC;IAAA,CAAC,CAAC;IACrFE,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC;EACtB,CAAC;EAGHT,SAAS,CAAC,MAAI;IACdW,cAAc,EAAE;EAChB,CAAC,EAAC,CAACP,IAAI,EAACG,KAAK,CAAC,CAAC;EAEb,oBACE;IAAK,KAAK,EAAE;MAACS,eAAe,EAAG,OAAMrB,GAAI,GAAE;MAACsB,cAAc,EAAE;IAAO,CAAE;IAAC,SAAS,EAAC,0EAA0E;IAAA,wBAC9J,QAAC,YAAY;MAAA;MAAA;MAAA;IAAA,QAAE,eACf,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA,QAAE,EAEXR,OAAO,iBACR;MAAA,wBAAK,QAAC,eAAe;QAAA;QAAA;QAAA;MAAA,QAAE,eACvB,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA,QAAE,eACjB,QAAC,OAAO;QAAC,KAAK,EAAE;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAE,eACpC,QAAC,OAAO;QAAC,KAAK,EAAE;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAElC;EAAA;IAAA;IAAA;IAAA;EAAA,QAES;AAEV;AAAC,GA9BQN,GAAG;AAAA,KAAHA,GAAG;AAgCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}