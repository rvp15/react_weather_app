{"ast":null,"code":"const API_KEY = '868f1076d62debf814f899677ab246e4';\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5';\n\n//https://api.openweathermap.org/data/2.5/weather?q={city name}&appid={API key}\n\nconst getFormattedData = async city => {\n  const currentWeather = await getCurrentWeather('weather', city);\n  console.log(currentWeather);\n  const lon = currentWeather.coord.lon;\n  const lat = currentWeather.coord.lat;\n\n  //https://api.openweathermap.org/data/3.0/onecall?lat={lat}&lon={lon}&exclude={part}&appid={API key}\n  const hourlyforcast = await getCurrentWeather('onecall', {\n    lat,\n    lon,\n    exclude: 'current,minutely,alerts',\n    units: city.units\n  }).then(formatForecast);\n  return hourlyforcast;\n};\nconst formatForecast = data => {\n  let {\n    timezone,\n    daily,\n    hourly\n  } = data;\n  daily = daily.slice(1, 6).map(item => {\n    return {\n      days: forma\n    };\n  });\n};\nconst getCurrentWeather = async (option, city) => {\n  const url = new URL(BASE_URL + '/' + option);\n  url.search = new URLSearchParams({\n    ...city,\n    appid: API_KEY\n  });\n  const response = await fetch(url);\n  return await response.json();\n};\n\n// const formatCurrentWeather=(data)=>{\n//    const {\n//     name,dt,\n//     coord:{lat,lon},\n//     main:{feels_like,temp,temp_min,temp_max,humidity,pressure},\n//     wind:{speed},\n//     sys:{country, sunrise,sunset},\n// } =  data\n// const {main,icon,description} = data.weather[0]\n\n// return {name,dt,lat,lon,feels_like,temp,temp_min,temp_max,humidity,pressure,speed,country, sunrise,sunset,main,icon,description}\n// }\n\nexport default getFormattedData;","map":{"version":3,"names":["API_KEY","BASE_URL","getFormattedData","city","currentWeather","getCurrentWeather","console","log","lon","coord","lat","hourlyforcast","exclude","units","then","formatForecast","data","timezone","daily","hourly","slice","map","item","days","forma","option","url","URL","search","URLSearchParams","appid","response","fetch","json"],"sources":["D:/Git/react_weather_app/src/apiservices/weatherapi.js"],"sourcesContent":["const API_KEY ='868f1076d62debf814f899677ab246e4'\r\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5'\r\n\r\n//https://api.openweathermap.org/data/2.5/weather?q={city name}&appid={API key}\r\n\r\nconst getFormattedData = async (city)=>{\r\n    const currentWeather = await getCurrentWeather('weather',city)\r\n    console.log(currentWeather)\r\n   const lon = currentWeather.coord.lon\r\n const lat = currentWeather.coord.lat\r\n\r\n //https://api.openweathermap.org/data/3.0/onecall?lat={lat}&lon={lon}&exclude={part}&appid={API key}\r\n const hourlyforcast = await getCurrentWeather('onecall', {\r\n    lat,lon,exclude:'current,minutely,alerts',\r\n    units:city.units\r\n }).then(formatForecast)\r\n    return hourlyforcast\r\n}\r\n\r\nconst formatForecast=(data)=>{\r\n    let {timezone,daily,hourly} = data\r\n    daily = daily.slice(1,6).map(item=>{\r\n        return {\r\n            days: forma\r\n        }\r\n    })\r\n}\r\n\r\n\r\nconst getCurrentWeather = async (option,city)=>{\r\n    const url = new URL(BASE_URL + '/' + option);\r\n    url.search = new URLSearchParams({...city,appid:API_KEY})\r\n\r\n    const response = await fetch(url);\r\n    return await response.json();\r\n}\r\n\r\n// const formatCurrentWeather=(data)=>{\r\n//    const {\r\n//     name,dt,\r\n//     coord:{lat,lon},\r\n//     main:{feels_like,temp,temp_min,temp_max,humidity,pressure},\r\n//     wind:{speed},\r\n//     sys:{country, sunrise,sunset},\r\n// } =  data\r\n// const {main,icon,description} = data.weather[0]\r\n\r\n// return {name,dt,lat,lon,feels_like,temp,temp_min,temp_max,humidity,pressure,speed,country, sunrise,sunset,main,icon,description}\r\n// }\r\n\r\n\r\n\r\n\r\nexport default getFormattedData;"],"mappings":"AAAA,MAAMA,OAAO,GAAE,kCAAkC;AACjD,MAAMC,QAAQ,GAAG,yCAAyC;;AAE1D;;AAEA,MAAMC,gBAAgB,GAAG,MAAOC,IAAI,IAAG;EACnC,MAAMC,cAAc,GAAG,MAAMC,iBAAiB,CAAC,SAAS,EAACF,IAAI,CAAC;EAC9DG,OAAO,CAACC,GAAG,CAACH,cAAc,CAAC;EAC5B,MAAMI,GAAG,GAAGJ,cAAc,CAACK,KAAK,CAACD,GAAG;EACtC,MAAME,GAAG,GAAGN,cAAc,CAACK,KAAK,CAACC,GAAG;;EAEpC;EACA,MAAMC,aAAa,GAAG,MAAMN,iBAAiB,CAAC,SAAS,EAAE;IACtDK,GAAG;IAACF,GAAG;IAACI,OAAO,EAAC,yBAAyB;IACzCC,KAAK,EAACV,IAAI,CAACU;EACd,CAAC,CAAC,CAACC,IAAI,CAACC,cAAc,CAAC;EACpB,OAAOJ,aAAa;AACxB,CAAC;AAED,MAAMI,cAAc,GAAEC,IAAI,IAAG;EACzB,IAAI;IAACC,QAAQ;IAACC,KAAK;IAACC;EAAM,CAAC,GAAGH,IAAI;EAClCE,KAAK,GAAGA,KAAK,CAACE,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAACC,GAAG,CAACC,IAAI,IAAE;IAC/B,OAAO;MACHC,IAAI,EAAEC;IACV,CAAC;EACL,CAAC,CAAC;AACN,CAAC;AAGD,MAAMnB,iBAAiB,GAAG,OAAOoB,MAAM,EAACtB,IAAI,KAAG;EAC3C,MAAMuB,GAAG,GAAG,IAAIC,GAAG,CAAC1B,QAAQ,GAAG,GAAG,GAAGwB,MAAM,CAAC;EAC5CC,GAAG,CAACE,MAAM,GAAG,IAAIC,eAAe,CAAC;IAAC,GAAG1B,IAAI;IAAC2B,KAAK,EAAC9B;EAAO,CAAC,CAAC;EAEzD,MAAM+B,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAG,CAAC;EACjC,OAAO,MAAMK,QAAQ,CAACE,IAAI,EAAE;AAChC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAKA,eAAe/B,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}