{"ast":null,"code":"var _jsxFileName = \"D:\\\\Git\\\\react_weather_app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport CitiesButton from './components/CitiesButton';\n// import hot from './assets/hot.jpg'\nimport video from './assets/video.mp4';\nimport SearchBar from './components/SearchBar';\n// import UilReact from '@iconscout/react-unicons/icons/uil-react'\nimport TimeandLocation from './components/TimeandLocation';\nimport CurrentDetails from './components/CurrentDetails';\nimport Forcast from './components/Forcast';\nimport { useEffect, useState } from 'react';\nimport getFormattedData from './apiservices/weatherapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [city, setCity] = useState({\n    q: 'new york'\n  });\n  const [unit, setUnit] = useState('metric');\n  const [weather, setWeather] = useState(null);\n  const startDataFetch = async () => {\n    getFormattedData({\n      ...city,\n      unit\n    }).then(data => {\n      setWeather(data);\n    });\n    console.log(weather);\n  };\n  useEffect(() => {\n    startDataFetch();\n  }, [city, unit]);\n  // style={{backgroundImage: `url(${hot})`,backgroundSize: 'cover'}}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        src: video,\n        autoPlay: true,\n        loop: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-auto  py-6 px-40  h-fit content\",\n        children: [/*#__PURE__*/_jsxDEV(CitiesButton, {\n          setCity: setCity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n          setCity: setCity,\n          unit: unit,\n          setUnit: setUnit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 1\n        }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TimeandLocation, {\n            weather: weather\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(CurrentDetails, {\n            weatherdetail: weather\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Forcast, {\n            detail: weather.hourly,\n            title: 'Hourly Forecast'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Forcast, {\n            detail: weather.daily,\n            title: 'Daily Forecast'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"61Pyzm4d1QyCD3l0ZkaD8bYFK0M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["CitiesButton","video","SearchBar","TimeandLocation","CurrentDetails","Forcast","useEffect","useState","getFormattedData","App","city","setCity","q","unit","setUnit","weather","setWeather","startDataFetch","then","data","console","log","hourly","daily"],"sources":["D:/Git/react_weather_app/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport CitiesButton from './components/CitiesButton';\n// import hot from './assets/hot.jpg'\nimport video from './assets/video.mp4'\nimport SearchBar from './components/SearchBar';\n// import UilReact from '@iconscout/react-unicons/icons/uil-react'\nimport TimeandLocation from './components/TimeandLocation';\nimport CurrentDetails from './components/CurrentDetails';\nimport Forcast from './components/Forcast';\nimport { useEffect, useState } from 'react';\nimport getFormattedData from './apiservices/weatherapi'\n\nfunction App() {\nconst [city,setCity] = useState({q: 'new york'})\nconst [unit,setUnit] =useState('metric')\nconst [weather,setWeather]=useState(null)\n\n  const startDataFetch = async()=>{\n    getFormattedData({...city,unit}).then((data)=>{setWeather(data)})\n    console.log(weather)\n  }\n\n  \nuseEffect(()=>{\nstartDataFetch();\n},[city,unit])\n// style={{backgroundImage: `url(${hot})`,backgroundSize: 'cover'}}\n  return (\n    <div className='main'>\n      <div className=\"overlay\">\n      <video src={video} autoPlay loop muted/>\n    <div className=\"mx-auto  py-6 px-40  h-fit content\">\n<CitiesButton setCity={setCity}/>\n<SearchBar setCity={setCity} unit={unit} setUnit={setUnit}/>\n{weather && (\n<div><TimeandLocation weather={weather}/>\n<CurrentDetails weatherdetail={weather}/>\n<Forcast detail={weather.hourly} title={'Hourly Forecast'}/>\n<Forcast detail={weather.daily}  title={'Daily Forecast'}/></div>\n)}\n </div></div>\n </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,YAAY,MAAM,2BAA2B;AACpD;AACA,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C;AACA,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,gBAAgB,MAAM,0BAA0B;AAAA;AAEvD,SAASC,GAAG,GAAG;EAAA;EACf,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGJ,QAAQ,CAAC;IAACK,CAAC,EAAE;EAAU,CAAC,CAAC;EAChD,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAEP,QAAQ,CAAC,QAAQ,CAAC;EACxC,MAAM,CAACQ,OAAO,EAACC,UAAU,CAAC,GAACT,QAAQ,CAAC,IAAI,CAAC;EAEvC,MAAMU,cAAc,GAAG,YAAS;IAC9BT,gBAAgB,CAAC;MAAC,GAAGE,IAAI;MAACG;IAAI,CAAC,CAAC,CAACK,IAAI,CAAEC,IAAI,IAAG;MAACH,UAAU,CAACG,IAAI,CAAC;IAAA,CAAC,CAAC;IACjEC,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC;EACtB,CAAC;EAGHT,SAAS,CAAC,MAAI;IACdW,cAAc,EAAE;EAChB,CAAC,EAAC,CAACP,IAAI,EAACG,IAAI,CAAC,CAAC;EACd;EACE,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,uBACnB;MAAK,SAAS,EAAC,SAAS;MAAA,wBACxB;QAAO,GAAG,EAAEZ,KAAM;QAAC,QAAQ;QAAC,IAAI;QAAC,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAE,eAC1C;QAAK,SAAS,EAAC,oCAAoC;QAAA,wBACvD,QAAC,YAAY;UAAC,OAAO,EAAEU;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAE,eACjC,QAAC,SAAS;UAAC,OAAO,EAAEA,OAAQ;UAAC,IAAI,EAAEE,IAAK;UAAC,OAAO,EAAEC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAE,EAC3DC,OAAO,iBACR;UAAA,wBAAK,QAAC,eAAe;YAAC,OAAO,EAAEA;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAE,eACzC,QAAC,cAAc;YAAC,aAAa,EAAEA;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAE,eACzC,QAAC,OAAO;YAAC,MAAM,EAAEA,OAAO,CAACO,MAAO;YAAC,KAAK,EAAE;UAAkB;YAAA;YAAA;YAAA;UAAA,QAAE,eAC5D,QAAC,OAAO;YAAC,MAAM,EAAEP,OAAO,CAACQ,KAAM;YAAE,KAAK,EAAE;UAAiB;YAAA;YAAA;YAAA;UAAA,QAAE;QAAA;UAAA;UAAA;UAAA;QAAA,QAC1D;MAAA;QAAA;QAAA;QAAA;MAAA,QACM;IAAA;MAAA;MAAA;MAAA;IAAA;EAAM;IAAA;IAAA;IAAA;EAAA,QACN;AAEP;AAAC,GA/BQd,GAAG;AAAA,KAAHA,GAAG;AAiCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}